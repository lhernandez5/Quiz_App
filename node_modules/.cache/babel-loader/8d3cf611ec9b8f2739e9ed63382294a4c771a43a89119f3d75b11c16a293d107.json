{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\nconst Questions = () => {\n  _s();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions\n  } = useSelector(state => state);\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (response !== null && response !== void 0 && response.results.length) {\n      const question = response.results[questionIndex];\n      let answer = [...question.incorrect_answers];\n      // answers.splice\n    }\n  }, [response]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  // setQuestionIndex(questionIndex+1);\n\n  console.log(\"Log in questions: \" + response);\n  console.log(\"response.results[0]: \" + response.results[0]);\n  return (\n    /*#__PURE__*/\n    // <>\n    // {response.results.splice(0,amount_of_questions).map((item, index)=>\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"Question \", questionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        mt: 5,\n        children: response.results[questionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Answer 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Answer 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: \"Score: 2/5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n    //   )}\n    // </>\n  );\n};\n_s(Questions, \"iB8xjzeuaxRoRWh3y+VI+RAK7tY=\", false, function () {\n  return [useSelector, useAxios];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useSelector","useEffect","useState","jsxDEV","_jsxDEV","getRandomInt","max","Math","floor","random","Questions","_s","question_category","question_difficulty","question_type","amount_of_questions","state","apiUrl","concat","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answer","incorrect_answers","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","variant","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nconst getRandomInt = (max) =>{\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n  } = useSelector((state) => state);\n\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answer = [...question.incorrect_answers];\n      // answers.splice\n    }\n  }, [response]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // setQuestionIndex(questionIndex+1);\n\n  console.log(\"Log in questions: \" + response);\n  console.log(\"response.results[0]: \" + response.results[0]);\n\n  return (\n    // <>\n    // {response.results.splice(0,amount_of_questions).map((item, index)=>\n    <Box>\n      <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n      <Typography mt={5}>{response.results[questionIndex].question}</Typography>\n      <Box mt={2}>\n        <Button variant=\"contained\">Answer 1</Button>\n      </Box>\n      <Box mt={2}>\n        <Button variant=\"contained\">Answer 2</Button>\n      </Box>\n      <Box mt={5}>Score: 2/5</Box>\n    </Box>\n    //   )}\n    // </>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}