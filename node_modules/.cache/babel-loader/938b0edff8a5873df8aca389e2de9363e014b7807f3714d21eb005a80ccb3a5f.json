{"ast":null,"code":"import{Box,Button,CircularProgress,Typography}from\"@mui/material\";import SelectField from\"../Components/SelectField\";import TextFieldComp from\"../Components/TextFieldComp\";import useAxios from\"../hooks/useAxios\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const{response,error,loading}=useAxios({url:\"/api_category.php\"});const history=useNavigate();if(loading){return/*#__PURE__*/_jsx(Box,{mt:20,children:/*#__PURE__*/_jsx(CircularProgress,{variant:\"determinate\"})});}if(error){return/*#__PURE__*/_jsx(Typography,{variant:\"h6\",mt:20,color:\"red\",children:\"Something went wrong.\"});}const difficultyOptions=[{id:\"easy\",name:\"Easy\"},{id:\"medium\",name:\"Medium\"},{id:\"hard\",name:\"Hard\"}];const typeOptions=[{id:\"multiple\",name:\"Multiple Choice\"},{id:\"boolean\",name:\"True/False\"}];const handleSubmit=e=>{e.preventDefault();history.push(\"/questions\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(SelectField,{options:response.trivia_categories,label:\"Category\"}),/*#__PURE__*/_jsx(SelectField,{options:difficultyOptions,label:\"Difficulty\"}),/*#__PURE__*/_jsx(SelectField,{options:typeOptions,label:\"Type\"}),/*#__PURE__*/_jsx(TextFieldComp,{label:\"Number of Questions\"}),/*#__PURE__*/_jsx(Box,{mt:3,width:\"100%\",children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",type:\"submit\",children:\"Get Started\"})})]});};export default Settings;","map":{"version":3,"names":["Box","Button","CircularProgress","Typography","SelectField","TextFieldComp","useAxios","useNavigate","jsx","_jsx","jsxs","_jsxs","Settings","response","error","loading","url","history","mt","children","variant","color","difficultyOptions","id","name","typeOptions","handleSubmit","e","preventDefault","push","onSubmit","options","trivia_categories","label","width","fullWidth","type"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Settings.js"],"sourcesContent":["import { Box, Button, CircularProgress, Typography } from \"@mui/material\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldComp from \"../Components/TextFieldComp\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Settings = () => {\n  const { response, error, loading } = useAxios({ url: \"/api_category.php\" });\n  const history = useNavigate();\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress variant=\"determinate\" />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Something went wrong.\n      </Typography>\n    );\n  }\n\n  const difficultyOptions = [\n    { id: \"easy\", name: \"Easy\"},\n    { id: \"medium\", name: \"Medium\"},\n    { id: \"hard\", name: \"Hard\"}\n  ];\n\n  const typeOptions = [\n    { id: \"multiple\", name: \"Multiple Choice\"},\n    { id: \"boolean\", name: \"True/False\"}\n  ]\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(\"/questions\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SelectField options={response.trivia_categories} label=\"Category\" />\n      <SelectField options={difficultyOptions} label=\"Difficulty\" />\n      <SelectField options={typeOptions} label=\"Type\" />\n      <TextFieldComp label=\"Number of Questions\" />\n      <Box mt={3} width=\"100%\">\n        <Button fullWidth variant=\"contained\" type=\"submit\">\n          Get Started\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nexport default Settings;\n"],"mappings":"AAAA,OAASA,GAAG,CAAEC,MAAM,CAAEC,gBAAgB,CAAEC,UAAU,KAAQ,eAAe,CACzE,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CACxC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,OAAQ,CAAC,CAAGT,QAAQ,CAAC,CAAEU,GAAG,CAAE,mBAAoB,CAAC,CAAC,CAC3E,KAAM,CAAAC,OAAO,CAAGV,WAAW,CAAC,CAAC,CAE7B,GAAIQ,OAAO,CAAE,CACX,mBACEN,IAAA,CAACT,GAAG,EAACkB,EAAE,CAAE,EAAG,CAAAC,QAAA,cACVV,IAAA,CAACP,gBAAgB,EAACkB,OAAO,CAAC,aAAa,CAAE,CAAC,CACvC,CAAC,CAEV,CAEA,GAAIN,KAAK,CAAE,CACT,mBACEL,IAAA,CAACN,UAAU,EAACiB,OAAO,CAAC,IAAI,CAACF,EAAE,CAAE,EAAG,CAACG,KAAK,CAAC,KAAK,CAAAF,QAAA,CAAC,uBAE7C,CAAY,CAAC,CAEjB,CAEA,KAAM,CAAAG,iBAAiB,CAAG,CACxB,CAAEC,EAAE,CAAE,MAAM,CAAEC,IAAI,CAAE,MAAM,CAAC,CAC3B,CAAED,EAAE,CAAE,QAAQ,CAAEC,IAAI,CAAE,QAAQ,CAAC,CAC/B,CAAED,EAAE,CAAE,MAAM,CAAEC,IAAI,CAAE,MAAM,CAAC,CAC5B,CAED,KAAM,CAAAC,WAAW,CAAG,CAClB,CAAEF,EAAE,CAAE,UAAU,CAAEC,IAAI,CAAE,iBAAiB,CAAC,CAC1C,CAAED,EAAE,CAAE,SAAS,CAAEC,IAAI,CAAE,YAAY,CAAC,CACrC,CAED,KAAM,CAAAE,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBX,OAAO,CAACY,IAAI,CAAC,YAAY,CAAC,CAC5B,CAAC,CAED,mBACElB,KAAA,SAAMmB,QAAQ,CAAEJ,YAAa,CAAAP,QAAA,eAC3BV,IAAA,CAACL,WAAW,EAAC2B,OAAO,CAAElB,QAAQ,CAACmB,iBAAkB,CAACC,KAAK,CAAC,UAAU,CAAE,CAAC,cACrExB,IAAA,CAACL,WAAW,EAAC2B,OAAO,CAAET,iBAAkB,CAACW,KAAK,CAAC,YAAY,CAAE,CAAC,cAC9DxB,IAAA,CAACL,WAAW,EAAC2B,OAAO,CAAEN,WAAY,CAACQ,KAAK,CAAC,MAAM,CAAE,CAAC,cAClDxB,IAAA,CAACJ,aAAa,EAAC4B,KAAK,CAAC,qBAAqB,CAAE,CAAC,cAC7CxB,IAAA,CAACT,GAAG,EAACkB,EAAE,CAAE,CAAE,CAACgB,KAAK,CAAC,MAAM,CAAAf,QAAA,cACtBV,IAAA,CAACR,MAAM,EAACkC,SAAS,MAACf,OAAO,CAAC,WAAW,CAACgB,IAAI,CAAC,QAAQ,CAAAjB,QAAA,CAAC,aAEpD,CAAQ,CAAC,CACN,CAAC,EACF,CAAC,CAEX,CAAC,CAED,cAAe,CAAAP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}