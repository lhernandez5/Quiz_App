{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};\nconst Questions = () => {\n  _s();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score\n  } = useSelector(state => state);\n  const history = useNavigate();\n  // const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n  // if(!question_category && !question_difficulty && !question_type){\n  //   apiUrl = apiUrl.concat(`&category=\"\"&difficulty=\"\"&type=\"\"`);\n  // }\n\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (response !== null && response !== void 0 && response.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(getRandomInt(question.incorrect_answers.length + 1), 0, question.correct_answer);\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  const handleClickAnswer = e => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"Question \", questionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        mt: 5,\n        children: decode(response.results[questionIndex].question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: [\"Score: \", score, \"/\", response.results.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), options.map((data, id) => /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClickAnswer,\n          variant: \"contained\",\n          children: decode(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Questions, \"x5OumzhGy6ARJjmDdSye2bY51CI=\", false, function () {\n  return [useSelector, useNavigate, useAxios];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useSelector","useEffect","useState","useNavigate","handleScoreChange","decode","jsxDEV","_jsxDEV","Fragment","_Fragment","getRandomInt","max","Math","floor","random","Questions","_s","question_category","question_difficulty","question_type","amount_of_questions","score","state","history","apiUrl","concat","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answers","incorrect_answers","splice","correct_answer","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickAnswer","e","target","textContent","dispatch","variant","map","data","id","onClick","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport { decode } from \"html-entities\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score,\n  } = useSelector((state) => state);\n\n  const history = useNavigate();\n  // const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n  // if(!question_category && !question_difficulty && !question_type){\n  //   apiUrl = apiUrl.concat(`&category=\"\"&difficulty=\"\"&type=\"\"`);\n  // }\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length + 1),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (e) => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n        <Typography mt={5}>\n          {decode(response.results[questionIndex].question)}\n        </Typography>\n        <Box mt={5}>\n          Score: {score}/{response.results.length}\n        </Box>\n        {options.map((data, id) => (\n          <Box mt={2} key={id}>\n            <Button onClick={handleClickAnswer} variant=\"contained\">\n              {decode(data)}\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}