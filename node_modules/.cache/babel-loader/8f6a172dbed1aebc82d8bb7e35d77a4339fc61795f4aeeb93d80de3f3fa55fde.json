{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};\nconst Questions = () => {\n  _s();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    // amount_of_questions,\n    score\n  } = useSelector(state => state);\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=10&category=${question_category}&difficulty=${question_difficulty}&type=${question_type}`;\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    // if (response?.results.length) {\n    if (response && response.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(getRandomInt(question.incorrect_answers.length + 1), 0, question.correct_answer);\n      setOptions(answers);\n      console.log(\"useeffect res\" + response);\n      console.log(\"useeffect res.results\" + response.results);\n    }\n\n    // else if(response && response.results.length===undefined){\n\n    //   history(\"/issue\");\n    // }\n  }, [response, questionIndex, history]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  const handleClickAnswer = e => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"Question \", questionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        mt: 5,\n        children: decode(response.results[questionIndex].question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: [\"Score: \", score, \"/\", response.results.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), options.map((data, id) => /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClickAnswer,\n          variant: \"contained\",\n          children: decode(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Questions, \"QejSTUBfC4NuKASq5aLzz5GAuac=\", false, function () {\n  return [useSelector, useNavigate, useDispatch, useAxios];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useDispatch","useSelector","useEffect","useState","useNavigate","handleScoreChange","decode","jsxDEV","_jsxDEV","Fragment","_Fragment","getRandomInt","max","Math","floor","random","Questions","_s","question_category","question_difficulty","question_type","score","state","history","dispatch","apiUrl","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answers","incorrect_answers","splice","correct_answer","console","log","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickAnswer","e","target","textContent","variant","map","data","id","onClick","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport { decode } from \"html-entities\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    // amount_of_questions,\n    score,\n  } = useSelector((state) => state);\n\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=10&category=${question_category}&difficulty=${question_difficulty}&type=${question_type}`;\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() =>\n  {\n    // if (response?.results.length) {\n      if (response && response.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length + 1),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n   console.log(\"useeffect res\"+response);\n    console.log(\"useeffect res.results\"+response.results);\n    }\n    \n    // else if(response && response.results.length===undefined){\n   \n    //   history(\"/issue\");\n    // }\n}, [response , questionIndex, history]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (e) => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n\n  return (\n    <>\n    {/* { (response.results.length!==0) ? ( */}\n      <Box>\n        <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n        <Typography mt={5}>\n          {decode(response.results[questionIndex].question)}\n        </Typography>\n        <Box mt={5}>\n          Score: {score}/{response.results.length}\n        </Box>\n        {options.map((data, id) => (\n          <Box mt={2} key={id}>\n            <Button onClick={handleClickAnswer} variant=\"contained\">\n              {decode(data)}\n            </Button>\n          </Box>\n        ))}\n      </Box>\n\n        {/* ) : ( history(\"/issue\")) }  */}\n    </>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}