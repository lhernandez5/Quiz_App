{"ast":null,"code":"import{Box,Typography,Button,CircularProgress}from\"@mui/material\";import useAxios from\"../hooks/useAxios\";import{useDispatch,useSelector}from\"react-redux\";import{useEffect,useState}from\"react\";import{useNavigate}from\"react-router\";import{handleScoreChange}from\"../redux/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const getRandomInt=max=>{return Math.floor(Math.random()*max);};const Questions=()=>{const{question_category,question_difficulty,question_type,amount_of_questions,score}=useSelector(state=>state);const history=useNavigate();const dispatch=useDispatch();let apiUrl=\"/api.php?amount=10&category=\".concat(question_category,\"&difficulty=\").concat(question_difficulty,\"&type=\").concat(question_type);const{response,loading}=useAxios({url:apiUrl});const[questionIndex,setQuestionIndex]=useState(0);const[options,setOptions]=useState([]);console.log(\"api url\"+apiUrl);console.log(\"the response: \"+response);useEffect(()=>{if(response!==null&&response!==void 0&&response.results.length){const question=response.results[questionIndex];let answers=[...question.incorrect_answers];answers.splice(getRandomInt(question.incorrect_answers.length+1),0,question.correct_answer);setOptions(answers);}},[response,questionIndex]);if(loading){return/*#__PURE__*/_jsx(Box,{mt:20,children:/*#__PURE__*/_jsx(CircularProgress,{})});}const handleClickAnswer=e=>{const question=response.results[questionIndex];if(e.target.textContent===question.correct_answer){dispatch(handleScoreChange(score+1));}if(questionIndex+1<response.results.length){setQuestionIndex(questionIndex+1);}else{history(\"/score\");}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[\"Question \",questionIndex+1]}),/*#__PURE__*/_jsx(Typography,{mt:5,children:response.results[questionIndex].question}),options.map((data,id)=>/*#__PURE__*/_jsx(Box,{mt:2,children:/*#__PURE__*/_jsx(Button,{onClick:handleClickAnswer,variant:\"contained\",children:data})},id)),/*#__PURE__*/_jsxs(Box,{mt:5,children:[\"Score: \",score,\"/\",response.results.length]})]});};export default Questions;","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useDispatch","useSelector","useEffect","useState","useNavigate","handleScoreChange","jsx","_jsx","jsxs","_jsxs","getRandomInt","max","Math","floor","random","Questions","question_category","question_difficulty","question_type","amount_of_questions","score","state","history","dispatch","apiUrl","concat","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","console","log","results","length","question","answers","incorrect_answers","splice","correct_answer","mt","children","handleClickAnswer","e","target","textContent","variant","map","data","id","onClick"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score,\n  } = useSelector((state) => state);\n\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=10&category=${question_category}&difficulty=${question_difficulty}&type=${question_type}`;\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  console.log(\"api url\" + apiUrl);\n  console.log(\"the response: \" + response);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length + 1),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (e) => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n      <Typography mt={5}>{response.results[questionIndex].question}</Typography>\n      {options.map((data, id) => (\n        <Box mt={2} key={id}>\n          <Button onClick={handleClickAnswer} variant=\"contained\">\n            {data}\n          </Button>\n        </Box>\n      ))}\n      <Box mt={5}>\n        Score: {score}/{response.results.length}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Questions;\n"],"mappings":"AAAA,OAASA,GAAG,CAAEC,UAAU,CAAEC,MAAM,CAAEC,gBAAgB,KAAQ,eAAe,CACzE,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,KAAQ,cAAc,CAC1C,OAASC,iBAAiB,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,YAAY,CAAIC,GAAG,EAAK,CAC5B,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGH,GAAG,CAAC,CACxC,CAAC,CAED,KAAM,CAAAI,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CACJC,iBAAiB,CACjBC,mBAAmB,CACnBC,aAAa,CACbC,mBAAmB,CACnBC,KACF,CAAC,CAAGnB,WAAW,CAAEoB,KAAK,EAAKA,KAAK,CAAC,CAEjC,KAAM,CAAAC,OAAO,CAAGlB,WAAW,CAAC,CAAC,CAC7B,KAAM,CAAAmB,QAAQ,CAAGvB,WAAW,CAAC,CAAC,CAC9B,GAAI,CAAAwB,MAAM,gCAAAC,MAAA,CAAkCT,iBAAiB,iBAAAS,MAAA,CAAeR,mBAAmB,WAAAQ,MAAA,CAASP,aAAa,CAAE,CACvH,KAAM,CAAEQ,QAAQ,CAAEC,OAAQ,CAAC,CAAG5B,QAAQ,CAAC,CAAE6B,GAAG,CAAEJ,MAAO,CAAC,CAAC,CACvD,KAAM,CAACK,aAAa,CAAEC,gBAAgB,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CACrD,KAAM,CAAC4B,OAAO,CAAEC,UAAU,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAE1C8B,OAAO,CAACC,GAAG,CAAC,SAAS,CAAGV,MAAM,CAAC,CAC/BS,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAGR,QAAQ,CAAC,CAExCxB,SAAS,CAAC,IAAM,CACd,GAAIwB,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAES,OAAO,CAACC,MAAM,CAAE,CAC5B,KAAM,CAAAC,QAAQ,CAAGX,QAAQ,CAACS,OAAO,CAACN,aAAa,CAAC,CAChD,GAAI,CAAAS,OAAO,CAAG,CAAC,GAAGD,QAAQ,CAACE,iBAAiB,CAAC,CAC7CD,OAAO,CAACE,MAAM,CACZ9B,YAAY,CAAC2B,QAAQ,CAACE,iBAAiB,CAACH,MAAM,CAAG,CAAC,CAAC,CACnD,CAAC,CACDC,QAAQ,CAACI,cACX,CAAC,CACDT,UAAU,CAACM,OAAO,CAAC,CACrB,CACF,CAAC,CAAE,CAACZ,QAAQ,CAAEG,aAAa,CAAC,CAAC,CAE7B,GAAIF,OAAO,CAAE,CACX,mBACEpB,IAAA,CAACZ,GAAG,EAAC+C,EAAE,CAAE,EAAG,CAAAC,QAAA,cACVpC,IAAA,CAACT,gBAAgB,GAAE,CAAC,CACjB,CAAC,CAEV,CAEA,KAAM,CAAA8C,iBAAiB,CAAIC,CAAC,EAAK,CAC/B,KAAM,CAAAR,QAAQ,CAAGX,QAAQ,CAACS,OAAO,CAACN,aAAa,CAAC,CAChD,GAAIgB,CAAC,CAACC,MAAM,CAACC,WAAW,GAAKV,QAAQ,CAACI,cAAc,CAAE,CACpDlB,QAAQ,CAAClB,iBAAiB,CAACe,KAAK,CAAG,CAAC,CAAC,CAAC,CACxC,CAEA,GAAIS,aAAa,CAAG,CAAC,CAAGH,QAAQ,CAACS,OAAO,CAACC,MAAM,CAAE,CAC/CN,gBAAgB,CAACD,aAAa,CAAG,CAAC,CAAC,CACrC,CAAC,IAAM,CACLP,OAAO,CAAC,QAAQ,CAAC,CACnB,CACF,CAAC,CAED,mBACEb,KAAA,CAACd,GAAG,EAAAgD,QAAA,eACFlC,KAAA,CAACb,UAAU,EAACoD,OAAO,CAAC,IAAI,CAAAL,QAAA,EAAC,WAAS,CAACd,aAAa,CAAG,CAAC,EAAa,CAAC,cAClEtB,IAAA,CAACX,UAAU,EAAC8C,EAAE,CAAE,CAAE,CAAAC,QAAA,CAAEjB,QAAQ,CAACS,OAAO,CAACN,aAAa,CAAC,CAACQ,QAAQ,CAAa,CAAC,CACzEN,OAAO,CAACkB,GAAG,CAAC,CAACC,IAAI,CAAEC,EAAE,gBACpB5C,IAAA,CAACZ,GAAG,EAAC+C,EAAE,CAAE,CAAE,CAAAC,QAAA,cACTpC,IAAA,CAACV,MAAM,EAACuD,OAAO,CAAER,iBAAkB,CAACI,OAAO,CAAC,WAAW,CAAAL,QAAA,CACpDO,IAAI,CACC,CAAC,EAHMC,EAIZ,CACN,CAAC,cACF1C,KAAA,CAACd,GAAG,EAAC+C,EAAE,CAAE,CAAE,CAAAC,QAAA,EAAC,SACH,CAACvB,KAAK,CAAC,GAAC,CAACM,QAAQ,CAACS,OAAO,CAACC,MAAM,EACpC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}