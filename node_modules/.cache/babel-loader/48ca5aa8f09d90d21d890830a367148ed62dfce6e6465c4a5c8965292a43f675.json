{"ast":null,"code":"import { CHANGE_AMOUNT_OF_QUESTIONS, CHANGE_CATEGORY, CHANGE_DIFFICULTY, CHANGE_SCORE, CHANGE_TYPE } from \"./actionsTypes\";\nconst initialState = {\n  question_category: \"\",\n  question_difficulty: \"\",\n  question_type: \"\",\n  amount_of_questions: 50,\n  score: 0\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_CATEGORY:\n      return {\n        ...state,\n        question_category: action.payload\n      };\n    case CHANGE_DIFFICULTY:\n      return {\n        ...state,\n        question_difficulty: action.payload\n      };\n    case CHANGE_TYPE:\n      return {\n        ...state,\n        question_type: action.payload\n      };\n    case CHANGE_AMOUNT_OF_QUESTIONS:\n      return {\n        ...state,\n        amount_of_questions: action.payload\n      };\n    case CHANGE_SCORE:\n      return {\n        ...state,\n        score: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["CHANGE_AMOUNT_OF_QUESTIONS","CHANGE_CATEGORY","CHANGE_DIFFICULTY","CHANGE_SCORE","CHANGE_TYPE","initialState","question_category","question_difficulty","question_type","amount_of_questions","score","reducer","state","action","type","payload"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/redux/reducer.js"],"sourcesContent":["import {\n  CHANGE_AMOUNT_OF_QUESTIONS,\n  CHANGE_CATEGORY,\n  CHANGE_DIFFICULTY,\n  CHANGE_SCORE,\n  CHANGE_TYPE,\n} from \"./actionsTypes\";\n\nconst initialState = {\n  question_category: \"\",\n  question_difficulty: \"\",\n  question_type: \"\",\n  amount_of_questions: 50,\n  score: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_CATEGORY:\n      return {\n        ...state,\n        question_category: action.payload,\n      };\n    case CHANGE_DIFFICULTY:\n      return {\n        ...state,\n        question_difficulty: action.payload,\n      };\n    case CHANGE_TYPE:\n      return {\n        ...state,\n        question_type: action.payload,\n      };\n    case CHANGE_AMOUNT_OF_QUESTIONS:\n      return {\n        ...state,\n        amount_of_questions: action.payload,\n      };\n      case CHANGE_SCORE:\n      return {\n        ...state,\n        score: action.payload,\n      };\n      default:\n        return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":"AAAA,SACEA,0BAA0B,EAC1BC,eAAe,EACfC,iBAAiB,EACjBC,YAAY,EACZC,WAAW,QACN,gBAAgB;AAEvB,MAAMC,YAAY,GAAG;EACnBC,iBAAiB,EAAE,EAAE;EACrBC,mBAAmB,EAAE,EAAE;EACvBC,aAAa,EAAE,EAAE;EACjBC,mBAAmB,EAAE,EAAE;EACvBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKb,eAAe;MAClB,OAAO;QACL,GAAGW,KAAK;QACRN,iBAAiB,EAAEO,MAAM,CAACE;MAC5B,CAAC;IACH,KAAKb,iBAAiB;MACpB,OAAO;QACL,GAAGU,KAAK;QACRL,mBAAmB,EAAEM,MAAM,CAACE;MAC9B,CAAC;IACH,KAAKX,WAAW;MACd,OAAO;QACL,GAAGQ,KAAK;QACRJ,aAAa,EAAEK,MAAM,CAACE;MACxB,CAAC;IACH,KAAKf,0BAA0B;MAC7B,OAAO;QACL,GAAGY,KAAK;QACRH,mBAAmB,EAAEI,MAAM,CAACE;MAC9B,CAAC;IACD,KAAKZ,YAAY;MACjB,OAAO;QACL,GAAGS,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACD;MACE,OAAOH,KAAK;EAClB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}