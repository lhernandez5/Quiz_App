{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};\nconst Questions = () => {\n  _s();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score\n  } = useSelector(state => state);\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n  const {\n    response,\n    loading,\n    error\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (response !== null && response !== void 0 && response.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(getRandomInt(question.incorrect_answers.length + 1), 0, question.correct_answer);\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n  if (error) {\n    console.log(\"THIS IS THE ERROR: \" + error);\n    history(\"/\");\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  const handleClickAnswer = e => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"Question \", questionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        mt: 5,\n        children: response.results[questionIndex].question !== undefined && response.results !== null ? decode(response.results[questionIndex].question) : history(\"/issue\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: [\"Score: \", score, \"/\", response.results.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), options.map((data, id) => /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClickAnswer,\n          variant: \"contained\",\n          children: decode(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Questions, \"wFtNQkHepl/6l6cALag6aVCjosE=\", false, function () {\n  return [useSelector, useNavigate, useDispatch, useAxios];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useDispatch","useSelector","useEffect","useState","useNavigate","handleScoreChange","decode","jsxDEV","_jsxDEV","Fragment","_Fragment","getRandomInt","max","Math","floor","random","Questions","_s","question_category","question_difficulty","question_type","amount_of_questions","score","state","history","dispatch","apiUrl","concat","response","loading","error","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answers","incorrect_answers","splice","correct_answer","console","log","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickAnswer","e","target","textContent","variant","undefined","map","data","id","onClick","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport { decode } from \"html-entities\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score,\n  } = useSelector((state) => state);\n\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n\n  const { response, loading, error } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length + 1),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n\n  if (error) {\n      console.log(\"THIS IS THE ERROR: \"+error);\n      history(\"/\");\n  }\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (e) => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n        <Typography mt={5}>\n          {(response.results[questionIndex].question!==undefined) && (response.results!==null) ? decode(response.results[questionIndex].question): history(\"/issue\")}\n        </Typography>\n        <Box mt={5}>\n          Score: {score}/{response.results.length}\n        </Box>\n        {options.map((data, id) => (\n          <Box mt={2} key={id}>\n            <Button onClick={handleClickAnswer} variant=\"contained\">\n              {decode(data)}\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}