{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\nconst Questions = () => {\n  _s();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score\n  } = useSelector(state => state);\n  const history = useNavigate();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (response !== null && response !== void 0 && response.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(getRandomInt(question.incorrect_answers.length), 0, question.correct_answer);\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n  const handleClickAnswer = () => {\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history.push(\"/score\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [\"Question \", questionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      mt: 5,\n      children: response.results[questionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), options.map((data, id) => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickAnswer,\n        variant: \"contained\",\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [\"Score: \", score, \"/\", response.results.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"Vbs4D1jRRknPI9lLV4QZD/hnJSI=\", false, function () {\n  return [useSelector, useNavigate, useAxios];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useSelector","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","getRandomInt","max","Math","floor","random","Questions","_s","question_category","question_difficulty","question_type","amount_of_questions","score","state","history","apiUrl","concat","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answers","incorrect_answers","splice","correct_answer","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickAnswer","push","variant","map","data","id","onClick","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/useAxios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score\n  } = useSelector((state) => state);\n\n  const history = useNavigate();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = ()=>{\n    if(questionIndex +1 < response.results.length){\n      setQuestionIndex(questionIndex +1);\n    }else{\n      history.push(\"/score\");\n    }\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n      <Typography mt={5}>{response.results[questionIndex].question}</Typography>\n      {options.map((data, id) => (\n        <Box mt={2} key={id}>\n          <Button onClick={handleClickAnswer} variant=\"contained\">{data}</Button>\n        </Box>\n      ))}\n      <Box mt={5}>Score: {score}/{response.results.length}</Box>\n    </Box>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}