{"ast":null,"code":"import{Box,Typography,Button,CircularProgress}from\"@mui/material\";import useAxios from\"../hooks/UseAxios\";import{useDispatch,useSelector}from\"react-redux\";import{useEffect,useState}from\"react\";import{useNavigate}from\"react-router\";import{handleScoreChange}from\"../redux/Actions\";import{decode}from\"html-entities\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const getRandomInt=max=>{return Math.floor(Math.random()*max);};const Questions=()=>{const{question_category,question_difficulty,question_type,amount_of_questions,score}=useSelector(state=>state);const history=useNavigate();const dispatch=useDispatch();let apiUrl=\"/api.php?amount=\".concat(amount_of_questions);// let apiUrl = `/api.php?amount=${10}`;\nif(question_category){apiUrl=apiUrl.concat(\"&category=\".concat(question_category));}if(question_difficulty){apiUrl=apiUrl.concat(\"&difficulty=\".concat(question_difficulty));}if(question_type){apiUrl=apiUrl.concat(\"&type=\".concat(question_type));}const{response,loading,error}=useAxios({url:apiUrl});const[questionIndex,setQuestionIndex]=useState(0);const[options,setOptions]=useState([]);useEffect(()=>{if(response!==null&&response!==void 0&&response.results.length){const question=response.results[questionIndex];let answers=[...question.incorrect_answers];answers.splice(getRandomInt(question.incorrect_answers.length+1),0,question.correct_answer);setOptions(answers);}},[response,questionIndex]);if(error){console.log(\"THIS IS THE ERROR: \"+error);history(\"/\");}if(loading){return/*#__PURE__*/_jsx(Box,{mt:20,children:/*#__PURE__*/_jsx(CircularProgress,{})});}const handleClickAnswer=e=>{const question=response.results[questionIndex];if(e.target.textContent===question.correct_answer){dispatch(handleScoreChange(score+1));}if(questionIndex+1<response.results.length){setQuestionIndex(questionIndex+1);}else{history(\"/score\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[\"Question \",questionIndex+1]}),/*#__PURE__*/_jsx(Typography,{mt:5,children:response.results[questionIndex]!==undefined&&response.results!==null?decode(response.results[questionIndex].question):history(\"/issue\")}),/*#__PURE__*/_jsxs(Box,{mt:5,children:[\"Score: \",score,\"/\",response.results.length]}),options.map((data,id)=>/*#__PURE__*/_jsx(Box,{mt:2,children:/*#__PURE__*/_jsx(Button,{onClick:handleClickAnswer,variant:\"contained\",children:decode(data)})},id))]})});};export default Questions;","map":{"version":3,"names":["Box","Typography","Button","CircularProgress","useAxios","useDispatch","useSelector","useEffect","useState","useNavigate","handleScoreChange","decode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getRandomInt","max","Math","floor","random","Questions","question_category","question_difficulty","question_type","amount_of_questions","score","state","history","dispatch","apiUrl","concat","response","loading","error","url","questionIndex","setQuestionIndex","options","setOptions","results","length","question","answers","incorrect_answers","splice","correct_answer","console","log","mt","children","handleClickAnswer","e","target","textContent","variant","undefined","map","data","id","onClick"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/pages/Questions.js"],"sourcesContent":["import { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport useAxios from \"../hooks/UseAxios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { handleScoreChange } from \"../redux/Actions\";\nimport { decode } from \"html-entities\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_questions,\n    score,\n  } = useSelector((state) => state);\n\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_questions}`;\n  // let apiUrl = `/api.php?amount=${10}`;\n\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n\n  const { response, loading, error } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length + 1),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n\n  if (error) {\n    console.log(\"THIS IS THE ERROR: \" + error);\n    history(\"/\");\n  }\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (e) => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history(\"/score\");\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n        <Typography mt={5}>\n          {response.results[questionIndex] !== undefined &&\n          response.results !== null\n            ? decode(response.results[questionIndex].question)\n            : history(\"/issue\")}\n        </Typography>\n        <Box mt={5}>\n          Score: {score}/{response.results.length}\n        </Box>\n        {options.map((data, id) => (\n          <Box mt={2} key={id}>\n            <Button onClick={handleClickAnswer} variant=\"contained\">\n              {decode(data)}\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}