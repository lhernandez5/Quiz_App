{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Quiz_App/src/Components/TextFieldComp.js\",\n  _s = $RefreshSig$();\nimport { Box, FormControl, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { handleAmountChange } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextFieldComp = props => {\n  _s();\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const handleChange = e => {\n    setValue(e.target.value);\n    dispatch(handleAmountChange(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        onChanges: handleChange,\n        variant: \"outlined\",\n        value: value,\n        label: \"Number of Questions\",\n        type: \"number\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TextFieldComp, \"lI2IN4GLWhjMIaFywTgdwLegAd4=\", false, function () {\n  return [useDispatch];\n});\n_c = TextFieldComp;\nexport default TextFieldComp;\nvar _c;\n$RefreshReg$(_c, \"TextFieldComp\");","map":{"version":3,"names":["Box","FormControl","TextField","React","useState","useDispatch","handleAmountChange","jsxDEV","_jsxDEV","TextFieldComp","props","_s","dispatch","value","setValue","handleChange","e","target","mt","width","children","fullWidth","size","onChanges","variant","label","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Quiz_App/src/Components/TextFieldComp.js"],"sourcesContent":["import { Box, FormControl, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { handleAmountChange } from \"../redux/actions\";\n\nconst TextFieldComp = (props) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    dispatch(handleAmountChange(e.target.value));\n  };\n\n  return (\n    <Box mt={3} width=\"100%\">\n      <FormControl fullWidth size=\"small\">\n        <TextField\n          onChanges={handleChange}\n          variant=\"outlined\"\n          value={value}\n          label=\"Number of Questions\"\n          type=\"number\"\n          size=\"small\"\n        />\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default TextFieldComp;\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;IACxBD,QAAQ,CAACN,kBAAkB,CAACU,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEL,OAAA,CAACR,GAAG;IAACkB,EAAE,EAAE,CAAE;IAACC,KAAK,EAAC,MAAM;IAAAC,QAAA,eACtBZ,OAAA,CAACP,WAAW;MAACoB,SAAS;MAACC,IAAI,EAAC,OAAO;MAAAF,QAAA,eACjCZ,OAAA,CAACN,SAAS;QACRqB,SAAS,EAAER,YAAa;QACxBS,OAAO,EAAC,UAAU;QAClBX,KAAK,EAAEA,KAAM;QACbY,KAAK,EAAC,qBAAqB;QAC3BC,IAAI,EAAC,QAAQ;QACbJ,IAAI,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtBIF,aAAa;EAAA,QACAJ,WAAW;AAAA;AAAA0B,EAAA,GADxBtB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}